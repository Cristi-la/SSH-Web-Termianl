# Generated by Django 4.2.5 on 2023-12-14 17:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(help_text='The email address of the user.', max_length=40, unique=True)),
                ('first_name', models.CharField(help_text='The first name of the user.', max_length=30)),
                ('last_name', models.CharField(help_text='The last name of the user.', max_length=30)),
                ('username', models.CharField(help_text='The username of the user.', max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.')),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='The date and time when the user joined.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SavedHosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address_v4', models.GenericIPAddressField(blank=True, help_text='The IPv4 address of the saved host.', null=True, protocol='IPv4')),
                ('ip_address_v6', models.GenericIPAddressField(blank=True, help_text='The IPv6 address of the saved host.', null=True, protocol='IPv6')),
                ('hostname', models.CharField(help_text='The hostname of the saved host.', max_length=255, unique=True)),
                ('username', models.CharField(blank=True, help_text='The username for accessing the saved host.', max_length=255, null=True)),
                ('password', models.CharField(blank=True, help_text='The password for accessing the saved host.', max_length=255, null=True)),
                ('private_key', models.TextField(blank=True, help_text='The private key for SSH access (if applicable).', null=True)),
                ('public_key', models.TextField(blank=True, help_text='The public key for SSH access (if applicable).', null=True)),
                ('passphrase', models.CharField(blank=True, help_text='The passphrase for the private key (if applicable).', max_length=255, null=True)),
                ('port', models.PositiveIntegerField(blank=True, default=22, help_text='The port number for accessing the saved host.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the saved host was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the saved host was last updated.')),
                ('user', models.ForeignKey(default=None, help_text='The user associated with the saved host.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
